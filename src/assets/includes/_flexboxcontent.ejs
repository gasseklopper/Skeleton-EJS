<div class="flexboxcontent">

  <div class="flexboxcontent__wrapper column small-12 medium-12 large-4">
    <div class="flexboxcontent__item">
    <div class="h1">
      <h1>Flexitem 1</h1>
    </div>
    <div class="flexboxcontent__content">
      hallo
    </div>
    <div class="flexboxcontent__cta">
          <a href="#" class="btn btn--purple">Test</a>
    </div>
    </div>
    </div>


  <div class="flexboxcontent__wrapper column small-12 medium-12 large-4">
    <div class="flexboxcontent__item">
    <div class="h1">
      <h1>Flexitem 1</h1>
    </div>
    <div class="flexboxcontent__content">
      I don’t consider this to be a silver bullet layout solution but by keeping it lightweight it should complement a more rigid layout solution using CSS Grids (an upcoming CSS feature) or something a little more old fashioned like Bootstrap’s grid system, which relies heavily on row and column classes.
A grid is great for overall structure of an app when certain portions of the layout need to be strictly controlled but a more flexible system is equally great for the content since content is far more fluid and you have less control over the size of content on given screens.
So why not go ahead and use the best of both and let me know your thoughts and whether you have any improvements. Thank you.
I don’t consider this to be a silver bullet layout solution but by keeping it lightweight it should complement a more rigid layout solution using CSS Grids (an upcoming CSS feature) or something a little more old fashioned like Bootstrap’s grid system, which relies heavily on row and column classes.et me know your thoughts and whether you have any improvements. Thank you.
    </div>
    <div class="flexboxcontent__cta">
          <a href="#" class="btn btn--purple">Test</a>
    </div>
    </div>
  </div>

  <div class="flexboxcontent__wrapper column small-12 medium-12 large-4">
    <div class="flexboxcontent__item">
    <div class="h1">
      <h1>Flexitem 1</h1>
      <h1>Flexitem 1</h1>
    </div>
    <div class="flexboxcontent__content">
      I don’t consider this to be a silver bullet layout solution but by keeping it lightweight it should complement a more rigid layout solution using CSS Grids (an upcoming CSS feature) or something a little more old fashioned like Bootstrap’s grid system, which relies heavily on row and column classes.
A grid is great for overall structure of an app when certain portions of the layout need to be strictly controlled but a more flexible system is equally great for the content since content is far more fluid and you have less control over the size of content on given screens.
So why not go ahead and use the best of both and let me know your thoughts and whether you have any improvements. Thank you.
I don’t consider this to be
    </div>
    <div class="flexboxcontent__cta">
          <a href="#" class="btn btn--purple">Test</a>
    </div>
    </div>
  </div>

</div>

<div class="flexboxcontent1">

    <div class="flexboxcontent1__item column small-12 medium-12 large-4">
    <div class="h1">
      <h1>Flexitem 1</h1>
    </div>
    <div class="flexboxcontent1__content">
      hallo
    </div>
    <div class="flexboxcontent1__cta">
          <a href="#" class="btn btn--purple">Test</a>
    </div>
    </div>


    <div class="flexboxcontent1__item column small-12 medium-12 large-4">
    <div class="h1">
      <h1>Flexitem 1</h1>
    </div>
    <div class="flexboxcontent1__content">
    </div>
    <div class="flexboxcontent1__cta">
          <a href="#" class="btn btn--purple">Test</a>
    </div>
  </div>


    <div class="flexboxcontent1__item column small-12 medium-12 large-4">
    <div class="h1">
      <h1>Flexitem 1</h1>
      <h1>Flexitem 1</h1>
    </div>
    <div class="flexboxcontent1__content">
    </div>
    <div class="flexboxcontent1__cta">
          <a href="#" class="btn btn--purple">Test</a>
    </div>
    </div>
</div>
